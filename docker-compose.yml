services:
  # flask:
  #   build: ./packages/IA
  #   networks:
  #     - app-network
  #   ports:
  #     - "5000:5000"

  backend:
    build: ./packages/backend
    ports:
      - "3001:3001"
    networks:
      - app-network
    volumes:
      - ./packages/backend:/app
      - ./packages/backend/uploads:/app/uploads
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - DB_SSL=false
      - DB_PORT=5432
      - FLASK_API_URL=http://flask:5000
      - NODE_ENV=production
    # depends_on:
    #   - db
    #   - flask

  # db:
  #   image: postgres:15-alpine
  #   networks:
  #     - app-network
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: postgres
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   command: ["postgres"]

  nextjs:
    build: ./packages/frontend/
    container_name: nextjs
    networks:
      - app-network
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost/api
      - API_URL=http://nginx/api
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - backend

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    networks:
      - app-network
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - nextjs
      - backend

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
